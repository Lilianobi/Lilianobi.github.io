/// <reference types="react" />
import { DataSourceDecorator } from "../../../utils/DataSourceDecorator";
/**
 * Class representing a Thumbnail Generation extension decorator.
 * Extends the `DataSourceDecorator` to handle thumbnail generation for images and videos.
 *
 * @extends {DataSourceDecorator}
 */
export declare class ThumbnailGenerationExtensionDecorator extends DataSourceDecorator {
    /**
     * Gets the unique identifier for the Thumbnail Generation extension decorator.
     *
     * @returns {string} The unique identifier for the Thumbnail Generation extension decorator.
     */
    getId(): string;
    /**
    * Provides the image message bubble with support for thumbnail generation.
    * If the "imagemoderation" extension is included, it uses the default image bubble.
    * Otherwise, it checks for a thumbnail URL in the message metadata and uses it if available.
    *
    * @param {string} imageUrl - The URL of the image.
    * @param {string} placeholderImage - The URL of the placeholder image.
    * @param {CometChat.MediaMessage} message - The media message containing the image.
    * @param {Function} [onClick] - Optional click event handler.
    * @param {ImageBubbleStyle} [style] - Optional style for the image bubble.
    * @returns {React.ReactNode} The rendered image message bubble.
    */
    getImageMessageBubble(imageUrl: string, placeholderImage: string, message: CometChat.MediaMessage, onClick?: Function): JSX.Element | Element;
    /**
     * Provides the video message bubble with support for thumbnail generation.
     * It checks for a thumbnail URL in the message metadata and uses it if available.
     *
     * @param {string} videoUrl - The URL of the video.
     * @param {CometChat.MediaMessage} message - The media message containing the video.
     * @param {string} [thumbnailUrl] - Optional URL of the thumbnail image.
     * @param {Function} [onClick] - Optional click event handler.
     * @returns {React.ReactNode} The rendered video message bubble.
     */
    getVideoMessageBubble(videoUrl: string, message: CometChat.MediaMessage, thumbnailUrl?: string, onClick?: Function): JSX.Element | Element;
}
