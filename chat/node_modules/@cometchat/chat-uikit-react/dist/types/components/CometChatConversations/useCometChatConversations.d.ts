import React from "react";
import { Action } from "./CometChatConversations";
import { Conversation } from "@cometchat/chat-sdk-javascript";
import { ConversationsManager } from "./controller";
type Args = {
    conversationsRequestBuilder: CometChat.ConversationsRequestBuilder | null;
    conversationsManagerRef: React.MutableRefObject<ConversationsManager | null>;
    fetchNextAndAppendConversations: (fetchId: string) => Promise<void>;
    fetchNextIdRef: React.MutableRefObject<string>;
    dispatch: React.Dispatch<Action>;
    errorHandler: (error: unknown, source?: string) => void;
    refreshSingleConversation: (message: CometChat.BaseMessage, remove?: boolean) => Promise<void>;
    onMessageReceived: (message: CometChat.BaseMessage) => Promise<void>;
    setReceipts: (messageReceipt: CometChat.MessageReceipt, updateReadAt: boolean) => void;
    setTypingIndicator: (typingIndicator: CometChat.TypingIndicator, typingStarted: boolean) => void;
    loggedInUser: CometChat.User | null;
    activeConversation: Conversation | null;
    setActiveConversationState: React.Dispatch<React.SetStateAction<Conversation | null>>;
    hideUserStatus?: boolean;
};
export declare function useCometChatConversations(args: Args): void;
export {};
